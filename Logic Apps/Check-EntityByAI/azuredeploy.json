{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Logic Apps resource to be created"
            }
        },
        "Location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "Location of the Logic Apps resource to be created"
            }
        }
    },
    "variables": {
        "azuresentinel": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "office365": "[concat('office365-', parameters('PlaybookName'))]",
        "ip2locationip": "[concat('ip2locationip-', parameters('PlaybookName'))]",
        "azureopenai": "[concat('azureopenai-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuresentinel')]",
            "location": "[parameters('Location')]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {
                },
                "parameterValueSet": {
                    "name": "managedIdentityAuth",
                    "values": {}
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('office365')]",
            "location": "[parameters('Location')]",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('ip2locationip')]",
            "location": "[parameters('Location')]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ip2locationip')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azureopenai')]",
            "location": "[parameters('Location')]",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureopenai')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[parameters('Location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('azuresentinel'))]",
                "[resourceId('Microsoft.Web/connections', variables('office365'))]",
                "[resourceId('Microsoft.Web/connections', variables('ip2locationip'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "body": {
                                    "callback_url": "@listCallbackUrl()"
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Entities_-_Get_Accounts": {
                            "runAfter": {
                                "Initialize_variables": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "path": "/entities/account"
                            }
                        },
                        "Initialize_variables": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "tmp",
                                        "type": "string"
                                    },
                                    {
                                        "name": "whois",
                                        "type": "string"
                                    },
                                    {
                                        "name": "content",
                                        "type": "string"
                                    },
                                    {
                                        "name": "mailAddress",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Creates_a_completion_for_the_chat_message": {
                            "runAfter": {
                                "Add_comment_to_incident_(V3)_whois": [
                                    "Succeeded"
                                ],
                                "For_each_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureopenai']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "messages": [
                                        {
                                            "role": "system",
                                            "content": "Microsoft Defender for Cloud Apps から出力した Impossible travel activity インシデントについて、調査要否を判断する AI エージェントです。入力される情報はインシデントのエンティティであるユーザーと IP アドレスの情報です。以下の場合、正規の操作とみなし過検知と判断します。\n- ユーザーがシステムアカウントもしくはゲストユーザーの場合\n- すべての IP アドレスの所有者がZscaler, NEC, Microsoft のいずれかの場合\n- ユーザーの所属国と すべての IP アドレス国情報が一致する場合\n- ただし中国もしくは香港所属のユーザーは IP アドレスの国情報が中国・香港いずれでも正規の操作と見なす\n- 南アメリカ所属のユーザーは IP アドレスの国情報が南アメリカいずれの国でも正規の操作と見なす\n\n上記に基づき、以下の JSON フォーマットで応答してください。\n{\"falsePositive\": \"true or false\", \"reason\": \"日本語で判断基準と判断のもとになった情報を出力\"}\n"
                                        },
                                        {
                                            "role": "user",
                                            "content": "@{variables('whois')},@{body('Entities_-_Get_Accounts')}"
                                        }
                                    ],
                                    "temperature": 1,
                                    "top_p": 1,
                                    "stream": false,
                                    "stop": null,
                                    "max_tokens": 4096,
                                    "presence_penalty": 0,
                                    "frequency_penalty": 0,
                                    "n": 1,
                                    "seed": 0,
                                    "logprobs": false,
                                    "response_format": {
                                        "type": "text"
                                    }
                                },
                                "path": "/2024-02-15-preview/deployments/@{encodeURIComponent('gpt-4.1')}/chat/completions",
                                "queries": {
                                    "api-version": "2024-12-01-preview"
                                }
                            }
                        },
                        "For_each_1": {
                            "foreach": "@body('Creates_a_completion_for_the_chat_message')['choices']",
                            "actions": {
                                "Set_variable_content": {
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "content",
                                        "value": "@item()?['message']?['content']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Creates_a_completion_for_the_chat_message": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Parse_JSON_content": {
                            "runAfter": {
                                "For_each_1": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@variables('content')",
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "falsePositive": {
                                            "type": "string"
                                        },
                                        "reason": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "Condition": {
                            "actions": {
                                "Update_incident": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "status": "Closed",
                                            "classification": {
                                                "ClassificationAndReason": "FalsePositive - IncorrectAlertLogic",
                                                "ClassificationReasonText": "@body('Parse_JSON_content')?['reason']"
                                            }
                                        },
                                        "path": "/Incidents"
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON_content": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Send_an_email_(V2)": {
                                        "runAfter": {
                                            "Add_comment_to_incident_(V3)_reason": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['office365']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "body": {
                                                "To": "@variables('mailAddress')",
                                                "Subject": "(Important) Detect unusual access using your account",
                                                "Body": "<title>Logic Apps Notification</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      color: #333;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 10px;\n    }\n\n    th, td {\n      border: 1px solid #ddd;\n      padding: 6px;\n      text-align: left;\n    }\n\n    thead {\n      background-color: #f2f2f2;\n    }\n\n    tbody tr:nth-child(even) {\n      background-color: #f9f9f9;\n    }\n\n    a {\n      color: #0066cc;\n      text-decoration: none;\n    }\n\n    a:hover {\n      text-decoration: underline;\n    }\n  </style>\n\n\n  <p>通常とは異なる場所からのアクセスが検出されました。</p>\n  <p>自身のアクセスか確認の上、Forms に回答してください。</p>\n  <br><br>\n\n  <p><strong>アクセス日時 (UTC):</strong></p>\n  @{triggerBody()?['object']?['properties']?['firstActivityTimeUtc']}\n  <br><br>\n\n  <p><strong>アクセス元 IP アドレス情報:</strong></p>\n  @{body('Create_HTML_table_whois')}\n  <br><br>\n\n  <p><strong>Formsリンク:</strong></p>\n  <a href=\"https://xxx.xxx.com\">こちらをクリック</a>\n\n",
                                                "Importance": "High"
                                            },
                                            "path": "/v2/Mail"
                                        }
                                    },
                                    "Add_comment_to_incident_(V3)_reason": {
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "body": {
                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                "message": "<p class=\"editor-paragraph\">@{body('Parse_JSON_content')?['reason']}</p>"
                                            },
                                            "path": "/Incidents/Comment"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@bool(body('Parse_JSON_content')?['falsePositive'])",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Entities_-_Get_IPs": {
                            "runAfter": {
                                "Initialize_variables": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "path": "/entities/ip"
                            }
                        },
                        "For_each_IPs": {
                            "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                            "actions": {
                                "Lookup_IP": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['ip2locationip']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/",
                                        "queries": {
                                            "ip": "@items('For_each_IPs')?['Address']"
                                        }
                                    }
                                },
                                "Append_to_string_variable_tmp": {
                                    "runAfter": {
                                        "Lookup_IP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "tmp",
                                        "value": "@body('Lookup_IP')"
                                    }
                                }
                            },
                            "runAfter": {
                                "Entities_-_Get_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Set_variable_whois": {
                            "runAfter": {
                                "For_each_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "whois",
                                "value": "@concat('[',replace(variables('tmp'),'}{','},{'),']')"
                            }
                        },
                        "Create_HTML_table_whois": {
                            "runAfter": {
                                "Parse_JSON_whois": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "from": "@body('Parse_JSON_whois')",
                                "format": "HTML"
                            }
                        },
                        "Add_comment_to_incident_(V3)_whois": {
                            "runAfter": {
                                "Create_HTML_table_whois": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p class=\"editor-paragraph\">@{body('Create_HTML_table_whois')}</p>"
                                },
                                "path": "/Incidents/Comment"
                            }
                        },
                        "For_each_Accounts": {
                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                            "actions": {
                                "Set_variable_mailAddress": {
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "mailAddress",
                                        "value": "@items('For_each_Accounts')?['additionalData']['MailAddress']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition_Number_of_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Condition_Number_of_Accounts": {
                            "actions": {},
                            "runAfter": {
                                "Entities_-_Get_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Terminate": {
                                        "type": "Terminate",
                                        "inputs": {
                                            "runStatus": "Succeeded"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@length(body('Entities_-_Get_Accounts')?['Accounts'])",
                                            1
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Parse_JSON_whois": {
                            "runAfter": {
                                "Set_variable_whois": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@variables('whois')",
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ip": {
                                                "type": "string"
                                            },
                                            "country_code": {
                                                "type": "string"
                                            },
                                            "country_name": {
                                                "type": "string"
                                            },
                                            "region_name": {
                                                "type": "string"
                                            },
                                            "city_name": {
                                                "type": "string"
                                            },
                                            "as": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuresentinel'))]",
                                "connectionName": "[variables('azuresentinel')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office365'))]",
                                "connectionName": "[variables('office365')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            },
                            "ip2locationip": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('ip2locationip'))]",
                                "connectionName": "[variables('ip2locationip')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ip2locationip')]"
                            },
                            "azureopenai": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureopenai'))]",
                                "connectionName": "[variables('azureopenai')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureopenai')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
