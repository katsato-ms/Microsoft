{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Logic Apps resource to be created"
            }
        },
        "Location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "Location of the Logic Apps resource to be created"
            }
        }
    },
    "variables": {
        "azureblob": "[concat('azureblob-', parameters('PlaybookName'))]",
        "office365": "[concat('office365-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azureblob')]",
            "location": "[parameters('Location')]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {
                },
                "parameterValueSet": {
                    "name": "managedIdentityAuth",
                    "values": {}
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('office365')]",
            "location": "[parameters('Location')]",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[parameters('Location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('azureblob'))]",
                "[resourceId('Microsoft.Web/connections', variables('office365'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "interval": 1,
                                "frequency": "Month",
                                "startTime": "2025-03-11T09:00:00Z",
                                "timeZone": "Tokyo Standard Time"
                            },
                            "evaluatedRecurrence": {
                                "interval": 1,
                                "frequency": "Month",
                                "startTime": "2025-03-11T09:00:00Z",
                                "timeZone": "Tokyo Standard Time"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Get_BLOB_Contents_-_mailAddressList_": {
                            "runAfter": {
                                "Initialize_variable_-_blobPath": [
                                    "Succeeded"
                                ]
                            },
                            "metadata": {
                                "JTJmdHh0JTJmbWFpbEFkZHJlc3NMaXN0X0F6dXJlLnR4dA==": "/txt/mailAddressList_Azure.txt",
                                "JTJmdHh0JTJmbWFpbEFkZHJlc3NMaXN0X3Jlc291cmNlR3JvdXAudHh0": "/txt/mailAddressList_resourceGroup.txt"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('sacusdefault01'))}/files/@{encodeURIComponent(encodeURIComponent('JTJmdHh0JTJmbWFpbEFkZHJlc3NMaXN0X3Jlc291cmNlR3JvdXAudHh0'))}/content",
                                "queries": {
                                    "inferContentType": true
                                }
                            }
                        },
                        "Get_BLOB_Contents_-_Billing": {
                            "runAfter": {
                                "Parse_JSON_-_mailAddressList": [
                                    "Succeeded"
                                ]
                            },
                            "metadata": {
                                "JTJmYmlsbGluZyUyZmpzb24lMmYyMDI1MDEwMS1iaWxsaW5nX3N1bW1hcnkuanNvbg==": "/billing/json/20250101-billing_summary.json",
                                "JTJmYmlsbGluZyUyZmpzb24lMmYyMDI1MDEwMS1iaWxsaW5nX3N1bW1hcnkudHh0": "/billing/json/20250101-billing_summary.txt"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('sacusdefault01'))}/files/@{encodeURIComponent(encodeURIComponent(variables('blobPath')))}/content",
                                "queries": {
                                    "inferContentType": true
                                }
                            }
                        },
                        "Initialize_variable_-_blobPath": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "blobPath",
                                        "type": "string",
                                        "value": "@concat('/billing/json/',formatDateTime(addToTime(utcNow(), -1, 'month'), 'yyyyMM01')\r\n,'-billing_summary.txt')\r\n"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON_-_mailAddressList": {
                            "runAfter": {
                                "Get_BLOB_Contents_-_mailAddressList_": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Get_BLOB_Contents_-_mailAddressList_')",
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "resourceGroup": {
                                                "type": "string"
                                            },
                                            "mailAddress": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "resourceGroup",
                                            "mailAddress"
                                        ]
                                    }
                                }
                            }
                        },
                        "Parse_JSON_-_Billing": {
                            "runAfter": {
                                "Get_BLOB_Contents_-_Billing": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Get_BLOB_Contents_-_Billing')",
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ResourceGroup": {
                                                "type": "string"
                                            },
                                            "TotalCost": {
                                                "type": "number"
                                            }
                                        },
                                        "required": [
                                            "ResourceGroup",
                                            "TotalCost"
                                        ]
                                    }
                                }
                            }
                        },
                        "For_each_-_mailAddressList": {
                            "foreach": "@outputs('Parse_JSON_-_mailAddressList')['body']",
                            "actions": {
                                "For_each_-_Billing": {
                                    "foreach": "@outputs('Parse_JSON_-_Billing')['body']",
                                    "actions": {
                                        "Condition": {
                                            "actions": {
                                                "Send_Mail_(V2)": {
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "To": "@{items('For_each_-_mailAddressList')['mailAddress']}",
                                                            "Subject": "【Billing Report】Monthly Cost Summary - USD",
                                                            "Body": "\n\n<style>\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1.6;\n}\n.container {\nmax-width: 600px;\nmargin: auto;\npadding: 20px;\nborder: 1px solid #ddd;\nborder-radius: 8px;\nbackground-color: #f9f9f9;\n}\n.header {\nbackground-color: #0078D4;\ncolor: white;\npadding: 10px;\ntext-align: center;\nfont-size: 18px;\nfont-weight: bold;\nborder-radius: 8px 8px 0 0;\n}\n.content {\npadding: 15px;\nbackground-color: white;\nborder-radius: 0 0 8px 8px;\n}\n.total-cost {\nfont-size: 20px;\nfont-weight: bold;\ncolor: #0078D4;\n}\n.footer {\nfont-size: 12px;\ncolor: #555;\ntext-align: center;\npadding-top: 10px;\n}\n</style>\n\n\n<div class=\"container\">\n<div class=\"header\">Billing Report - Monthly Cost Summary</div>\n<div class=\"content\">\n<p>先月の使用料:</p>\n<p class=\"total-cost\">USD @{items('For_each_-_Billing')['TotalCost']}</p>\n</div>\n<div class=\"footer\">\nThis is an automated notification from xxx Team.\n</div>\n</div>\n\n",
                                                            "Importance": "Normal"
                                                        },
                                                        "path": "/v2/Mail"
                                                    }
                                                }
                                            },
                                            "else": {
                                                "actions": {}
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@items('For_each_-_mailAddressList')['resourceGroup']",
                                                            "@items('For_each_-_Billing')['resourceGroup']"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON_-_Billing": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureblob'))]",
                                "connectionName": "[variables('azureblob')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office365'))]",
                                "connectionName": "[variables('office365')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
